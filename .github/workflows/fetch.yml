name: Fetch Tuya Logs

on:
  schedule:
    - cron: "*/1 * * * *"  # every minute
  workflow_dispatch:        # manual trigger

jobs:
  fetch:
    runs-on: ubuntu-latest

    concurrency:
      group: tuya-logs-fetch
      cancel-in-progress: true

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # Cache pip packages to avoid re-download each run
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Tuya fetch script
        env:
          TUYA_ACCESS_ID: ${{ secrets.TUYA_ACCESS_ID }}
          TUYA_ACCESS_KEY: ${{ secrets.TUYA_ACCESS_KEY }}
          TUYA_REGION: us
          TUYA_DEVICE_ID: ${{ secrets.TUYA_DEVICE_ID }}
        run: python fetch_logs.py

      - name: Commit & push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Ensure file exists (prevent empty repo state)
          if [ ! -f latest.json ]; then
            echo "[]" > latest.json
          fi

          git add latest.json

          # Only commit if there are actual changes
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update logs $(date)"
            git push
          fi
